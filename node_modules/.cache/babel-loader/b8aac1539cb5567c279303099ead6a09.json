{"ast":null,"code":"var _jsxFileName = \"/Users/robomind/CodePlaygrounds/CodeChallenges/Outly/src/components/Map/index.map.jsx\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { popUP } from '../Popup/index.popup';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getWeather } from '../../redux/actions';\nimport './style.map.scss';\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClick = e => {\n      let _e$lngLat = e.lngLat,\n          lat = _e$lngLat.lat,\n          lng = _e$lngLat.lng;\n      this.setState({\n        latitude: lat,\n        longitude: lng,\n        lngLat: e.lngLat\n      });\n      this.props.getWeather(this.state.latitude, this.state.longitude);\n    };\n\n    this.componentDidMount = () => {\n      const _this$props = this.props,\n            token = _this$props.token,\n            latitude = _this$props.latitude,\n            longitude = _this$props.longitude,\n            zoom = _this$props.zoom,\n            mapStyle = _this$props.mapStyle;\n      mapboxgl.accessToken = token;\n      this.map = new mapboxgl.Map({\n        container: this.mapContainer,\n        center: [longitude, latitude],\n        zoom,\n        style: \"mapbox://styles/mapbox/\".concat(mapStyle)\n      });\n      this.map.addControl(new mapboxgl.NavigationControl());\n      this.map.on('click', this.onClick);\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      new mapboxgl.Popup().setLngLat(this.state.lngLat).setHTML(popUP(nextProps.locationData)).addTo(this.map);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"absolute top right left bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    locationData: state.locationData,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","map":{"version":3,"sources":["/Users/robomind/CodePlaygrounds/CodeChallenges/Outly/src/components/Map/index.map.jsx"],"names":["React","Component","mapboxgl","popUP","connect","bindActionCreators","getWeather","Map","onClick","e","lngLat","lat","lng","setState","latitude","longitude","props","state","componentDidMount","token","zoom","mapStyle","accessToken","map","container","mapContainer","center","style","addControl","NavigationControl","on","componentWillReceiveProps","nextProps","Popup","setLngLat","setHTML","locationData","addTo","render","el","mapStateToProps","error","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAO,kBAAP;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAExBO,OAFwB,GAEbC,CAAD,IAAO;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACRC,GADQ,aACRA,GADQ;AAAA,UACHC,GADG,aACHA,GADG;AAEb,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAEH,GADA;AAEVI,QAAAA,SAAS,EAAEH,GAFD;AAGVF,QAAAA,MAAM,EAAED,CAAC,CAACC;AAHA,OAAd;AAKA,WAAKM,KAAL,CAAWV,UAAX,CAAsB,KAAKW,KAAL,CAAWH,QAAjC,EAA2C,KAAKG,KAAL,CAAWF,SAAtD;AACH,KAVuB;;AAAA,SAYxBG,iBAZwB,GAYJ,MAAM;AAAA,0BAOlB,KAAKF,KAPa;AAAA,YAElBG,KAFkB,eAElBA,KAFkB;AAAA,YAGlBL,QAHkB,eAGlBA,QAHkB;AAAA,YAIlBC,SAJkB,eAIlBA,SAJkB;AAAA,YAKlBK,IALkB,eAKlBA,IALkB;AAAA,YAMlBC,QANkB,eAMlBA,QANkB;AAStBnB,MAAAA,QAAQ,CAACoB,WAAT,GAAuBH,KAAvB;AACA,WAAKI,GAAL,GAAW,IAAIrB,QAAQ,CAACK,GAAb,CAAiB;AACxBiB,QAAAA,SAAS,EAAE,KAAKC,YADQ;AAExBC,QAAAA,MAAM,EAAE,CAACX,SAAD,EAAYD,QAAZ,CAFgB;AAGxBM,QAAAA,IAHwB;AAIxBO,QAAAA,KAAK,mCAA6BN,QAA7B;AAJmB,OAAjB,CAAX;AAOA,WAAKE,GAAL,CAASK,UAAT,CAAoB,IAAI1B,QAAQ,CAAC2B,iBAAb,EAApB;AACA,WAAKN,GAAL,CAASO,EAAT,CAAY,OAAZ,EAAqB,KAAKtB,OAA1B;AACH,KA/BuB;;AAAA,SAiCxBuB,yBAjCwB,GAiCKC,SAAD,IAAe;AACvC,UAAI9B,QAAQ,CAAC+B,KAAb,GAAqBC,SAArB,CAA+B,KAAKjB,KAAL,CAAWP,MAA1C,EAAkDyB,OAAlD,CAA0DhC,KAAK,CAAC6B,SAAS,CAACI,YAAX,CAA/D,EAAyFC,KAAzF,CAA+F,KAAKd,GAApG;AACH,KAnCuB;AAAA;;AAqCxBe,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,GAAG,EAAEC,EAAE,IAAI,KAAKd,YAAL,GAAoBc,EAApC;AAAwC,MAAA,SAAS,EAAC,gCAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAzCuB;;AA0C3B;;AAED,MAAMC,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AACHmB,IAAAA,YAAY,EAAEnB,KAAK,CAACmB,YADjB;AAEHK,IAAAA,KAAK,EAAExB,KAAK,CAACwB;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAOtC,kBAAkB,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAeqC,QAAf,CAAzB;AACH,CAFD;;AAIA,eAAevC,OAAO,CAACoC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnC,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nimport { popUP } from '../Popup/index.popup';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getWeather } from '../../redux/actions';\r\n\r\nimport './style.map.scss';\r\n\r\nclass Map extends Component {\r\n\r\n    onClick = (e) => {\r\n        let {lat, lng} = e.lngLat;\r\n        this.setState({\r\n            latitude: lat,\r\n            longitude: lng,\r\n            lngLat: e.lngLat\r\n        });\r\n        this.props.getWeather(this.state.latitude, this.state.longitude);\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const {\r\n            token,\r\n            latitude,\r\n            longitude,\r\n            zoom,\r\n            mapStyle,\r\n        } = this.props;\r\n\r\n        mapboxgl.accessToken = token;\r\n        this.map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            center: [longitude, latitude],\r\n            zoom,\r\n            style: `mapbox://styles/mapbox/${ mapStyle }`\r\n        });\r\n\r\n        this.map.addControl(new mapboxgl.NavigationControl());\r\n        this.map.on('click', this.onClick);\r\n    };\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        new mapboxgl.Popup().setLngLat(this.state.lngLat).setHTML(popUP(nextProps.locationData)).addTo(this.map);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div ref={el => this.mapContainer = el} className='absolute top right left bottom'/>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        locationData: state.locationData,\r\n        error: state.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({getWeather}, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);"]},"metadata":{},"sourceType":"module"}