{"ast":null,"code":"import _objectSpread from \"/Users/robomind/CodePlaygrounds/CodeChallenges/Outly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_WEATHER, GET_WEATHER_ERROR } from '../types';\nconst initialState = {\n  weather: null,\n  name: null,\n  main: null,\n  wind: null,\n  error: ''\n};\nexport const weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WEATHER:\n      return {\n        weather: action.payload.weather,\n        main: action.payload.main,\n        wind: action.payload.wind,\n        name: action.payload.name,\n        error: ''\n      };\n\n    case GET_WEATHER_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/robomind/CodePlaygrounds/CodeChallenges/Outly/src/redux/reducers/reducer.weather.js"],"names":["GET_WEATHER","GET_WEATHER_ERROR","initialState","weather","name","main","wind","error","weatherReducer","state","action","type","payload"],"mappings":";AAAA,SACIA,WADJ,EAEIC,iBAFJ,QAGO,UAHP;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,IAAI,EAAE,IAJW;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeT,OADrB;AAEHE,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP,IAFlB;AAGHC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAHlB;AAIHF,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeR,IAJlB;AAKHG,QAAAA,KAAK,EAAE;AALJ,OAAP;;AAOJ,SAAKN,iBAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFlB;;AAIJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAlBM","sourcesContent":["import {\r\n    GET_WEATHER,\r\n    GET_WEATHER_ERROR\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    weather: null,\r\n    name: null,\r\n    main: null,\r\n    wind: null,\r\n    error: ''\r\n};\r\n\r\nexport const weatherReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_WEATHER:\r\n            return {\r\n                weather: action.payload.weather,\r\n                main: action.payload.main,\r\n                wind: action.payload.wind,\r\n                name: action.payload.name,\r\n                error: ''\r\n            };\r\n        case GET_WEATHER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}